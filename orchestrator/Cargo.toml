[package]
name = "orchestrator"
version = "0.8.0"
edition.workspace = true

[lib]
name = "orchestrator"
path = "src/lib.rs"

[[bin]]
name = "orchestrator"
path = "src/main.rs"

[dependencies]
alloy = { workspace = true, features = [
  "full",
  "node-bindings",
  "rpc-types-debug",
  "rpc-types-trace",
  "json-rpc",
  "rpc-client",
] }
assert_matches = { workspace = true }
async-std = { workspace = true }
async-trait = { workspace = true }
aws-config = { workspace = true, features = ["behavior-version-latest"] }
aws-credential-types = { workspace = true, features = [
  "hardcoded-credentials",
] }
aws-sdk-eventbridge.workspace = true
aws-sdk-s3 = { workspace = true, features = ["behavior-version-latest"] }
aws-sdk-sns = { workspace = true, features = ["behavior-version-latest"] }
aws-sdk-sqs = { workspace = true, features = ["behavior-version-latest"] }
axum = { workspace = true, features = ["macros"] }
bincode = { workspace = true }
bytes.workspace = true
cairo-vm = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true }
color-eyre = { workspace = true }
dotenvy = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
itertools = { workspace = true }
lazy_static = { workspace = true }
majin-blob-core = { workspace = true }
majin-blob-types = { workspace = true }
mockall = { workspace = true }
mockall_double = { workspace = true }
mongodb = { workspace = true, features = ["bson-uuid-1"], optional = true }
num-bigint = { workspace = true }
num-traits = { workspace = true }
omniqueue = { workspace = true, optional = true }
once_cell = { workspace = true }
orchestrator-atlantic-service = { workspace = true }
orchestrator-da-client-interface = { workspace = true }
orchestrator-ethereum-da-client = { workspace = true, optional = true }
orchestrator-ethereum-settlement-client = { workspace = true }
orchestrator-prover-client-interface = { workspace = true }
orchestrator-settlement-client-interface = { workspace = true }
orchestrator-sharp-service = { workspace = true }
orchestrator-starknet-settlement-client = { workspace = true }
orchestrator-utils = { workspace = true }
prove_block = { workspace = true }
rand = { workspace = true }
rstest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
starknet = { workspace = true }
starknet-core = { workspace = true }
starknet-os = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = [
  "sync",
  "macros",
  "rt-multi-thread",
  "rt",
] }
url = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }

aws-sdk-iam = { workspace = true }
aws-sdk-scheduler = { workspace = true }

#Instrumentation
opentelemetry = { workspace = true, features = ["metrics", "logs"] }
opentelemetry-appender-tracing = { workspace = true, default-features = false }
opentelemetry-otlp = { workspace = true, features = [
  "tonic",
  "metrics",
  "logs",
] }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio", "logs"] }
tracing = { workspace = true }
tracing-error = "0.2.1"
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = [
  "env-filter",
  "fmt",
  "json",
  "time",
  "default",
  "env-filter",
  "fmt",
] }

anyhow = { workspace = true }
httpmock = { version = "0.8.0-alpha.1", features = ["proxy", "remote"] }
hyper = { version = "0.14", features = ["full"] }
jemallocator = "0.5.4"
tracing-test = "0.2.5"

[features]
default = ["ethereum", "with_mongodb", "with_sqs"]
ethereum = ["orchestrator-ethereum-da-client"]
with_mongodb = ["mongodb"]
with_sqs = ["omniqueue"]
testing = ["orchestrator-ethereum-settlement-client/testing"]

[dev-dependencies]
hyper = { version = "0.14", features = ["full"] }
rstest = { workspace = true }
httpmock = { version = "0.8.0-alpha.1", features = ["proxy", "remote"] }

[build-dependencies]
build-version.workspace = true
