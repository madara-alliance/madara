version: "3.8"

services:
  # Loki - Log aggregation system
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - orchestrator-network

  # Promtail - Log shipping agent
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - orchestrator-network

  # Vector - Alternative log collector (can collect from multiple sources)
  vector:
    image: timberio/vector:latest-alpine
    container_name: vector
    ports:
      - "8686:8686" # Vector API
    volumes:
      - ./vector.toml:/etc/vector/vector.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: ["--config", "/etc/vector/vector.toml"]
    depends_on:
      - loki
    networks:
      - orchestrator-network

  # OpenTelemetry Collector - Bridge between OTLP and Loki
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "8888:8888" # Prometheus metrics
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # Health check
    depends_on:
      - loki
    networks:
      - orchestrator-network

networks:
  orchestrator-network:
    external: true

volumes:
  loki-data:
