[package]
name = "madara"
description = "Madara node"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true
homepage.workspace = true
build = "build.rs"

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "madara"

[dependencies]

# Madara
mc-analytics = { workspace = true }
mc-block-import = { workspace = true }
mc-block-production = { workspace = true }
mc-db = { workspace = true }
mc-devnet = { workspace = true }
mc-eth = { workspace = true }
mc-gateway-client = { workspace = true }
mc-gateway-server = { workspace = true }
mc-mempool = { workspace = true }
mc-rpc = { workspace = true }
mc-sync = { workspace = true }
mc-telemetry = { workspace = true }
mp-block = { workspace = true }
mp-chain-config = { workspace = true }
mp-oracle = { workspace = true }
mp-utils = { workspace = true }

# Starknet
blockifier.workspace = true
starknet_api.workspace = true

# Other
alloy.workspace = true
anyhow.workspace = true
async-trait.workspace = true
clap = { workspace = true, features = ["derive", "env"] }
fdlimit.workspace = true
futures = { workspace = true, features = ["thread-pool"] }
http.workspace = true
hyper = { version = "0.14", features = ["server"] }
jsonrpsee.workspace = true
rand.workspace = true
rayon.workspace = true
reqwest.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_yaml.workspace = true
thiserror.workspace = true
tokio.workspace = true
tower.workspace = true
tower-http.workspace = true
url.workspace = true

#Instrumentation
opentelemetry = { workspace = true, features = ["metrics", "logs"] }
opentelemetry-appender-tracing = { workspace = true, default-features = false }
opentelemetry-otlp = { workspace = true, features = [
  "tonic",
  "metrics",
  "logs",
] }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry-stdout = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio", "logs"] }
tracing = { workspace = true }
tracing-core = { workspace = true, default-features = false }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }


[features]
default = []
sound = ["mc-sync/m"]
