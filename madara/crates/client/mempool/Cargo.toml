[package]
name = "mc-mempool"
description = "Madara client mempool service"
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true
homepage.workspace = true

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dev-dependencies]

rstest = { workspace = true }
mc-db = { workspace = true, features = ["testing"] }
tokio = { workspace = true, features = ["rt-multi-thread"] }
proptest.workspace = true
proptest-derive.workspace = true
proptest-state-machine.workspace = true
bitvec.workspace = true
tracing = { workspace = true, features = ["log"] }
tracing-test.workspace = true
blockifier = { workspace = true, features = ["testing"] }
mockall.workspace = true
assert_matches.workspace = true
lazy_static.workspace = true
serde_json.workspace = true
starknet-types-core = { workspace = true, features = ["arbitrary"] }

[features]
testing = ["blockifier/testing", "mc-db/testing", "mockall"]

[dependencies]

# Madara
mc-analytics.workspace = true
mc-block-import.workspace = true
mc-db.workspace = true
mc-exec.workspace = true
mp-block.workspace = true
mp-chain-config.workspace = true
mp-class.workspace = true
mp-convert.workspace = true
mp-oracle.workspace = true
mp-receipt.workspace = true
mp-state-update.workspace = true
mp-transactions.workspace = true
mp-utils.workspace = true

# Starknet
blockifier.workspace = true
starknet-types-core.workspace = true
starknet-types-rpc.workspace = true
starknet_api.workspace = true

# Other
anyhow.workspace = true
mockall = { workspace = true, optional = true }
reqwest.workspace = true
serde.workspace = true
thiserror.workspace = true
tokio.workspace = true
tokio-util.workspace = true

#Instrumentation
opentelemetry = { workspace = true, features = ["metrics", "logs"] }
opentelemetry-appender-tracing = { workspace = true, default-features = false }
opentelemetry-otlp = { workspace = true, features = [
  "tonic",
  "metrics",
  "logs",
] }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry-stdout = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio", "logs"] }
tracing = { workspace = true }
tracing-core = { workspace = true, default-features = false }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
